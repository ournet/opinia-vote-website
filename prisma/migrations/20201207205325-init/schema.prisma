generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model StatementVote {
  id          Int @id @default(autoincrement())
  statementId Int @map("statement_id")
  userId      Int @map("user_id")
  points      Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user      User      @relation(fields: [userId], references: [id])
  statement Statement @relation(fields: [statementId], references: [id])

  @@unique([userId, statementId])
  @@index([statementId])
  @@index([userId])
  @@map("statement_votes")
}

model Statement {
  id           Int           @id @default(autoincrement())
  text         String
  languageCode String        @map("language_code")
  countryCode  String?       @map("country_code")
  authorId     Int           @map("author_id")
  question     String
  sourceUrl    String?       @map("source_url")
  type         StatementType

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  author Entity          @relation(fields: [authorId], references: [id])
  votes  StatementVote[]

  @@index([authorId])
  @@index([languageCode, createdAt])
  @@index([authorId, languageCode])
  @@map("statements")
}

enum StatementType {
  PROMISE
  INFO
  STATEMENT
}

model Entity {
  id           Int        @id @default(autoincrement())
  name         String
  slug         String
  type         EntityType
  fullName     String?
  // Abbreviation
  abbr         String?
  languageCode String     @map("language_code")
  countryCode  String?    @map("country_code")
  wikipediaUrl String?    @map("wikipedia_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  statements Statement[]
  @@unique([name, languageCode])
  @@unique([slug, languageCode])
  @@index([name])
  @@index([languageCode])
  @@map("entities")
}

enum EntityType {
  PERSON
  PLACE
  ORG
  EVENT
}

// ---- users

model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  votes StatementVote[]
  @@map("users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id")
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")

  @@index([userId], name: "userId")
  @@index([providerId], name: "providerId")
  @@index([providerAccountId], name: "providerAccountId")
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("sessions")
}
